<?php

include_once('mn_channels.features.inc');

/**
 * Implementation of hook_help().
 */
function mn_channels_help($path, $arg) {
  switch ($path) {
    case 'channels':
      $output = '<p>';
      $output .= t('<em>Channels</em> are groups of stories that have been picked by users that relate to the same topic. You can view the stories in each channel by clicking on its title in the left-hand sidebar.');
      $output .= "</p>";
      if (node_access('create', 'channel')) {
        $output .= "<ul>";
        $output .= "<li>". t("!create a new channel. You can begin adding stories to it by setting it as the active channel on Feeds and Search pages using the star icon to your lower right.", array('!create' => l(t('Create'), 'node/add/channel'))) ."</li>";
        $output .= "</ul>";
      }
      return $output;
    break;
  }
}

/**
 * Implementation of hook_enable().
 */
function mn_channels_enable() {
  // Create an example channel.
  $nid = db_result(db_query_range("SELECT nid FROM {node} WHERE type = 'channel'", 0, 1));
  if (!$nid) {
    global $user;
    $node = new stdClass();
    $node->uid = $user->uid;
    $node->title = "Example channel";
    $node->type = 'channel';
    $node->body = "You can collect news into a channel. Users can read this channel and subscribe to it. This is an example channel. Rename it for your purposes or remove it if you don't need it.";
    node_save($node);
    data_node_set_active('feeds_data_syndication', $node->nid);
  }
}

/**
 * Override node callback. Invoked from mn_core.
 */
function mn_channels_node_page_view($node, $cid = NULL) {
  $terms = array();
  foreach ($node->taxonomy as $term) {
    $terms[$term->tid] = $term->name;
  }
  drupal_set_title(t('News on @title', array('@title' => $node->title)));
  if ($plugin = context_get_plugin('condition', 'node')) {
    $plugin->execute($node, 'view');
  }
  $view = views_get_view('mn_channels_news');
  $output = $view->execute_display('page_1', $node->nid);
  if ($view->total_rows != 0) {
    return $output;
  }
  $output = '<div class="view-empty">';
  $output .= '<p>'. t('There are no articles in this channel.') .'</p>';
  if (user_access('edit data taxonomy relations')) {
    $items = array(
      t('Tag one or more articles with %terms to add them to this channel.', array('%terms' => implode($terms, true))),
      t('!edit to change the tags that add an article to a channel.', array('!edit' => l(t('Edit the channel'), 'node/'. $node->nid .'/edit'))),
    );
    $output .= theme('item_list', $items);
  }
  $output .= '</div>';
  return $output;
}

/**
 * Implementation of hook_context_links_alter().
 * Yank out the channel link from where it does not belong.
 */
function mn_channels_context_links_alter(&$links) {
  if (isset($links['channel']) && !context_get('context', 'mn-section-channels')) {
    unset($links['channel']);
  }
}

/**
 * Implementation of hook_data_delete_query_alter().
 *
 * Exempt items from deletion that have been added to a channel.
 *
 * @todo: Needs fixing, does not protect items efficiently.
 */
function mn_channels_data_delete_query_alter(DataQuery $query, $table_name) {
  if ($table_name == 'feeds_data_syndication') {
    $query->addJoin('data_taxonomy', 'feeds_data_syndication.id = data_taxonomy.id', 'LEFT JOIN');
    $query->addJoin('term_node', 'data_taxonomy.tid = term_node.tid', 'LEFT JOIN');
    $query->addWhere('term_node.tid IS NULL');
  }
}